// <auto-generated />
using System;
using ELaw.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ELaw.Migrations.EDb
{
    [DbContext(typeof(EDbContext))]
    partial class EDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ELaw.Models.Catchword_Lv1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Catchword_Lv1s");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catch1_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Catch1_Id");

                    b.ToTable("Catchword_Lv2s");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catch2_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Catch2_Id");

                    b.ToTable("Catchword_Lv3s");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catch3_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Catch3_Id");

                    b.ToTable("Catchword_Lv4s");
                });

            modelBuilder.Entity("ELaw.Models.Court_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Court_Types");
                });

            modelBuilder.Entity("ELaw.Models.Judge_Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Judge_Names");
                });

            modelBuilder.Entity("ELaw.Models.Judgment_Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Judgment_Countries");
                });

            modelBuilder.Entity("ELaw.Models.Judgment_Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Judgment_Languages");
                });

            modelBuilder.Entity("ELaw.Models.LawReview", b =>
                {
                    b.Property<int>("LAWREVIEW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CATCHWORD_LV1")
                        .HasColumnType("int");

                    b.Property<int?>("CATCHWORD_LV2")
                        .HasColumnType("int");

                    b.Property<int?>("CATCHWORD_LV3")
                        .HasColumnType("int");

                    b.Property<int?>("CATCHWORD_LV4")
                        .HasColumnType("int");

                    b.Property<int?>("COURT_TYPE")
                        .HasColumnType("int");

                    b.Property<string>("HEADNOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JUDGE_NAME")
                        .HasColumnType("int");

                    b.Property<int?>("JUDGMENT_COUNTRY")
                        .HasColumnType("int");

                    b.Property<string>("JUDGMENT_DATE")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("JUDGMENT_LANGUAGE")
                        .HasColumnType("int");

                    b.Property<string>("JUDGMENT_NAME")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("JUDGMENT_NAME_ADDITIONAL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("JUDGMENT_NAME_VERSUS")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("JUDGMENT_NUMBER")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("STATE")
                        .HasColumnType("int");

                    b.Property<string>("VERDICT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LAWREVIEW_ID");

                    b.HasIndex("CATCHWORD_LV1");

                    b.HasIndex("CATCHWORD_LV2");

                    b.HasIndex("CATCHWORD_LV3");

                    b.HasIndex("CATCHWORD_LV4");

                    b.HasIndex("COURT_TYPE");

                    b.HasIndex("JUDGE_NAME");

                    b.HasIndex("JUDGMENT_COUNTRY");

                    b.HasIndex("JUDGMENT_LANGUAGE");

                    b.HasIndex("STATE");

                    b.ToTable("LawReviews");
                });

            modelBuilder.Entity("ELaw.Models.ReferredCase", b =>
                {
                    b.Property<int>("REFERRED_CASES_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LAWREVIEW_ID")
                        .HasColumnType("int");

                    b.Property<string>("REFERRED_CASES")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("REFERRED_CASES_ID");

                    b.HasIndex("LAWREVIEW_ID");

                    b.ToTable("ReferredCases");
                });

            modelBuilder.Entity("ELaw.Models.ReferredLegislation", b =>
                {
                    b.Property<int>("REFERRED_LEGISLATION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LAWREVIEW_ID")
                        .HasColumnType("int");

                    b.Property<string>("REFERRED_LEGISLATIONS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("REFERRED_LEGISLATION_ID");

                    b.HasIndex("LAWREVIEW_ID");

                    b.ToTable("ReferredLegislations");
                });

            modelBuilder.Entity("ELaw.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Judgment_Country_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Judgment_Country_Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv2", b =>
                {
                    b.HasOne("ELaw.Models.Catchword_Lv1", "Catchword_Lv1s")
                        .WithMany()
                        .HasForeignKey("Catch1_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catchword_Lv1s");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv3", b =>
                {
                    b.HasOne("ELaw.Models.Catchword_Lv2", "Catchword_Lv2s")
                        .WithMany()
                        .HasForeignKey("Catch2_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catchword_Lv2s");
                });

            modelBuilder.Entity("ELaw.Models.Catchword_Lv4", b =>
                {
                    b.HasOne("ELaw.Models.Catchword_Lv3", "Catchword_Lv3s")
                        .WithMany()
                        .HasForeignKey("Catch3_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catchword_Lv3s");
                });

            modelBuilder.Entity("ELaw.Models.LawReview", b =>
                {
                    b.HasOne("ELaw.Models.Catchword_Lv1", "Catchword_Lv1s")
                        .WithMany()
                        .HasForeignKey("CATCHWORD_LV1");

                    b.HasOne("ELaw.Models.Catchword_Lv2", "Catchword_Lv2s")
                        .WithMany()
                        .HasForeignKey("CATCHWORD_LV2");

                    b.HasOne("ELaw.Models.Catchword_Lv3", "Catchword_Lv3s")
                        .WithMany()
                        .HasForeignKey("CATCHWORD_LV3");

                    b.HasOne("ELaw.Models.Catchword_Lv4", "Catchword_Lv4s")
                        .WithMany()
                        .HasForeignKey("CATCHWORD_LV4");

                    b.HasOne("ELaw.Models.Court_Type", "Court_Types")
                        .WithMany()
                        .HasForeignKey("COURT_TYPE");

                    b.HasOne("ELaw.Models.Judge_Name", "Judge_Names")
                        .WithMany()
                        .HasForeignKey("JUDGE_NAME");

                    b.HasOne("ELaw.Models.Judgment_Country", "Judgment_Countries")
                        .WithMany()
                        .HasForeignKey("JUDGMENT_COUNTRY");

                    b.HasOne("ELaw.Models.Judgment_Language", "Judgment_Languages")
                        .WithMany()
                        .HasForeignKey("JUDGMENT_LANGUAGE");

                    b.HasOne("ELaw.Models.State", "States")
                        .WithMany()
                        .HasForeignKey("STATE");

                    b.Navigation("Catchword_Lv1s");

                    b.Navigation("Catchword_Lv2s");

                    b.Navigation("Catchword_Lv3s");

                    b.Navigation("Catchword_Lv4s");

                    b.Navigation("Court_Types");

                    b.Navigation("Judge_Names");

                    b.Navigation("Judgment_Countries");

                    b.Navigation("Judgment_Languages");

                    b.Navigation("States");
                });

            modelBuilder.Entity("ELaw.Models.ReferredCase", b =>
                {
                    b.HasOne("ELaw.Models.LawReview", "LawReview")
                        .WithMany("ReferredCases")
                        .HasForeignKey("LAWREVIEW_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawReview");
                });

            modelBuilder.Entity("ELaw.Models.ReferredLegislation", b =>
                {
                    b.HasOne("ELaw.Models.LawReview", "LawReview")
                        .WithMany("ReferredLegislations")
                        .HasForeignKey("LAWREVIEW_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawReview");
                });

            modelBuilder.Entity("ELaw.Models.State", b =>
                {
                    b.HasOne("ELaw.Models.Judgment_Country", "Judgment_Countries")
                        .WithMany()
                        .HasForeignKey("Judgment_Country_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Judgment_Countries");
                });

            modelBuilder.Entity("ELaw.Models.LawReview", b =>
                {
                    b.Navigation("ReferredCases");

                    b.Navigation("ReferredLegislations");
                });
#pragma warning restore 612, 618
        }
    }
}
